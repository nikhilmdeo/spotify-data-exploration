import pandas as pd
import numpy as np
import random
from faker import Faker
from datetime import datetime, timedelta

faker = Faker()
np.random.seed(42)
random.seed(42)

# Parameters
num_events = 1_500_000
user_ids = list(range(1, 20_001))         # Assuming 20,000 users
track_ids = list(range(1, 10_001))        # Assuming 10,000 tracks
playlist_ids = list(range(1, 5_001))      # Assuming up to 5,000 playlists

device_types = ["iOS", "Android", "Web"]
network_types = ["WiFi", "4G", "5G"]
app_versions = ["5.6.1", "5.7.0", "6.0.0", "6.1.2"]
countries = ["US", "CA", "GB", "DE", "FR", "IN", "BR", "AU"]
share_destinations = ["WhatsApp", "Instagram", "Facebook", "Twitter", "Snapchat", "Email"]

# Core event types (balanced, practical set)
event_types = [
    "play_track", "pause_track", "resume_track", "skip_track", "like_track", "repeat_track", "seek_track",
    "create_playlist", "add_to_playlist", "remove_from_playlist", "follow_artist", "unfollow_artist",
    "follow_user", "unfollow_user", "search", "view_artist_page", "view_album_page", "view_playlist_page",
    "start_radio", "share_track", "share_playlist", "upgrade_subscription", "downgrade_subscription",
    "cancel_subscription", "view_ad", "click_ad", "purchase_merch"
]

events = []

for eid in range(1, num_events + 1):
    user_id = random.choice(user_ids)
    event_type = random.choices(event_types, weights=[
        25, 5, 5, 10, 10, 3, 3, 
        2, 5, 3, 3, 1, 
        2, 1, 20, 5, 4, 3,
        2, 3, 3, 1, 1, 
        5, 3, 1
    ], k=1)[0]

    event_timestamp = faker.date_time_between(start_date='-1y', end_date='now')
    track_id = random.choice(track_ids) if "track" in event_type or event_type in ["like_track", "skip_track", "share_track", "play_track", "pause_track", "resume_track", "seek_track", "repeat_track"] else None
    playlist_id = random.choice(playlist_ids) if "playlist" in event_type else None
    search_query = faker.word() if event_type == "search" else None
    share_dest = random.choice(share_destinations) if "share" in event_type else None
    duration_sec = random.randint(5, 300) if event_type in ["play_track", "pause_track", "resume_track", "seek_track"] else None
    session_id = f"sess_{random.randint(1, 500_000)}"

    events.append({
        "event_id": eid,
        "user_id": user_id,
        "event_type": event_type,
        "event_timestamp": event_timestamp,
        "track_id": track_id,
        "device_type": random.choice(device_types),
        "app_version": random.choice(app_versions),
        "network_type": random.choice(network_types),
        "location_country": random.choice(countries),
        "session_id": session_id,
        "search_query": search_query,
        "playlist_id": playlist_id,
        "share_destination": share_dest,
        "duration_sec": duration_sec
    })

# Convert to DataFrame and export
df_events = pd.DataFrame(events)
df_events.to_csv("events_v1_5m.csv", index=False)

print("âœ… events_v1_5m.csv created with", len(df_events), "rows.")
